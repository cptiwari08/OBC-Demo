name: .Net Build & Azure Release

env:
  DOTNET_VERSION: '9.0.100'
  package_name: 'ARAAdmin.zip'
  project_path: 'src/uhcnv.web.ar.admin/uhcnv.web.ar.admin.csproj'
  solution_path: 'uhcnv.web.ar.admin.sln'

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: uhcnv
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET 9 manually
        run: |
          $ErrorActionPreference = 'Stop'
          $dotnetInstallDir = "C:\\actions\\dotnet"
          mkdir $dotnetInstallDir -Force
          Invoke-WebRequest -Uri https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1 -OutFile dotnet-install.ps1
          .\\dotnet-install.ps1 -Version ${{ env.DOTNET_VERSION }} -InstallDir $dotnetInstallDir
          echo "$dotnetInstallDir" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: Add JFrog NuGet Source
        shell: pwsh
        run: |
          dotnet nuget remove source jfrog-artifactory || $true
          dotnet nuget add source "https://edgeinternal1uhg.optum.com/artifactory/api/nuget/v3/uhcnv-nuget-vir" `
            --name jfrog-artifactory `
            --username "${{ vars.UHCNV_ENTERPRISE_REGISTRY_NUGET_USER }}" `
            --password "${{ secrets.UHCNV_ENTERPRISE_REGISTRY_NUGET_PASSWORD }}" `
            --store-password-in-clear-text
          dotnet nuget list source

      - name: Restore NuGet packages
        run: dotnet restore ${{ env.solution_path }}

      - name: Build solution - Development Only
        run: dotnet build ${{ env.project_path }} --configuration Development --no-restore

      - name: Publish web project - Development Only
        run: |
          dotnet publish ${{ env.project_path }} --configuration Development --output ./publish/Development --no-build
          cp src/uhcnv.web.ar.admin/web.Development.config ./publish/Development

      - name: Create Deployment Package
        shell: pwsh
        run: |
          $outputPath = "packages/Development/${{ env.package_name }}"
          $sourcePath = "publish/Development"
          New-Item -ItemType Directory -Force -Path "packages/Development"
          Compress-Archive -Path "$sourcePath\*" -DestinationPath $outputPath -Force

      - name: Upload Development Package Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ARAAdminPackages
          path: packages/Development/${{ env.package_name }}

  release:
    name: Release to ara-dev
    needs: build
    environment:
      name: ara-dev
    runs-on: uhcnv
    steps:
      - name: Download Development Package Artifact
        uses: actions/download-artifact@v4
        with:
          name: ARAAdminPackages
          path: packages/Development

      - name: Verify Deployment Package Exists
        shell: pwsh
        run: |
          if (Test-Path "packages/Development/${{ env.package_name }}") {
            Write-Host "‚úÖ Package found: packages/Development/${{ env.package_name }}"
          } else {
            Write-Error "‚ùå Package not found!"
          }

      - name: Deploy to Azure Web App (ara-dev)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ vars.WEBAPP_NAME_DEV }}
          publish-profile: ${{ secrets.AZUREWEB_NP_DEV }}
          package: packages/Development/${{ env.package_name }}

      - name: Configure Azure App Service Runtime
        run: |
          echo "üîß Configuring Azure App Service Runtime for ara-dev"
          echo "App Service should be configured with:"
          echo "  - Runtime stack: .NET"
          echo "  - .NET version: 9 (Latest available)"
          echo "  - Platform: 64 Bit"
          echo "üí° This can be set in Azure Portal: App Service ‚Üí Configuration ‚Üí General Settings"
          echo "üéØ Alternative: Set specific version using Azure CLI: az webapp config set --resource-group [rg] --name [app] --net-framework-version v9.0"
